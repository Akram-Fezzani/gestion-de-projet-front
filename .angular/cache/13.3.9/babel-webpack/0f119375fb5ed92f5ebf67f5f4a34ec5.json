{"ast":null,"code":"import { Task } from 'src/app/models/Task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/task/task.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/slider\";\nimport * as i5 from \"@angular/material/slide-toggle\";\nexport let CardUpdateTaskComponent = /*#__PURE__*/(() => {\n  class CardUpdateTaskComponent {\n    constructor(router, ts, _router) {\n      this.router = router;\n      this.ts = ts;\n      this._router = _router;\n      this.isCollapsed = true;\n      this.task = new Task();\n      this.disableButton = false;\n    }\n\n    formatLabel(value) {\n      if (value >= 1000) {\n        return Math.round(value / 1000) + '%';\n      }\n\n      return value;\n    }\n\n    ngOnInit() {\n      throw new Error('Method not implemented.');\n    }\n\n    updateTask() {\n      this.ts.updateTask(this.task, \"1\").subscribe(r => {\n        console.log(r);\n      }, error => console.log(error));\n    }\n\n  }\n\n  CardUpdateTaskComponent.ɵfac = function CardUpdateTaskComponent_Factory(t) {\n    return new (t || CardUpdateTaskComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  CardUpdateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardUpdateTaskComponent,\n    selectors: [[\"app-card-update-task\"]],\n    decls: 59,\n    vars: 1,\n    consts: [[1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded-lg\", \"bg-blueGray-700\", \"border-0\"], [1, \"rounded-t\", \"bg-red-600\", \"mb-0\", \"px-6\", \"py-6\"], [1, \"font-semibold\", \"text-lg\", \"text-white\", \"text-xl\", \"font-bold\"], [1, \"flex-auto\", \"px-4\", \"lg:px-10\", \"py-10\", \"pt-0\"], [1, \"flex\", \"flex-wrap\"], [1, \"w-full\", \"lg:w-6/12\", \"px-4\"], [1, \"relative\", \"w-full\", \"mb-3\"], [\"htmlFor\", \"grid-password\", 1, \"block\", \"uppercase\", \"text-white\", \"text-xs\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Task Name\", \"name\", \"name\", \"required\", \"\", \"minlength\", \"5\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [\"type\", \"text\", \"placeholder\", \"Estimated Cost\", \"name\", \"estimatedCost\", \"required\", \"\", \"minlength\", \"5\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [\"type\", \"date\", \"value\", \" estimatedEndDate\", \"placeholder\", \"Estimated end date\", \"name\", \"estimatedEndDate\", \"required\", \"\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"w-full\", \"lg:w-12/12\", \"px-4\"], [\"type\", \"text\", \"rows\", \"4\", \"placeholder\", \"Description\", \"required\", \"\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"mt-6\", \"border-b-1\", \"border-blueGray-300\"], [\"color\", \"warn\", \"id\", \"advancement\", \"name\", \"advancement\", \"min\", \"0\", \"max\", \"100\", \"thumbLabel\", \"\", \"step\", \"1000\", \"min\", \"0\", \"max\", \"100000\", \"aria-label\", \"units\"], [\"color\", \"warn\"], [\"type\", \"button\", 1, \"bg-white\", \"text-red-600\", \"active:bg-red-600\", \"font-bold\", \"uppercase\", \"text-xs\", \"px-4\", \"py-2\", \"rounded\", \"shadow\", \"hover:shadow-md\", \"outline-none\", \"focus:outline-none\", \"mr-1\", \"ease-linear\", \"transition-all\", \"duration-150\"], [\"id\", \"registerButton\", \"href\", \"javascript:void(0)\", 1, \"bg-red-600\", \"text-white\", \"active:bg-red-900\", \"text-xs\", \"font-bold\", \"uppercase\", \"px-4\", \"py-2\", \"rounded\", \"shadow\", \"hover:shadow-lg\", \"outline-none\", \"focus:outline-none\", \"lg:mr-1\", \"lg:mb-0\", \"ml-3\", \"mb-3\", \"ease-linear\", \"transition-all\", \"duration-150\", 3, \"disabled\"]],\n    template: function CardUpdateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \" UPDATE Task \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\")(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \" Task Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"label\", 7);\n        i0.ɵɵtext(16, \" Estimated Cost \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 5)(19, \"div\", 6)(20, \"label\", 7);\n        i0.ɵɵtext(21, \" Estimated end date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 6)(25, \"label\", 7);\n        i0.ɵɵtext(26, \" manager \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"div\", 11)(29, \"div\", 6)(30, \"label\", 7);\n        i0.ɵɵtext(31, \" Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"textarea\", 12);\n        i0.ɵɵtext(33, \"            Description\\n                \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"hr\", 13);\n        i0.ɵɵelementStart(35, \"div\")(36, \"label\", 7);\n        i0.ɵɵtext(37, \" Advancement \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"mat-slider\", 14)(39, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 5)(41, \"div\", 6)(42, \"label\", 7);\n        i0.ɵɵtext(43, \" this Task is finished? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"br\");\n        i0.ɵɵtext(45, \" No \");\n        i0.ɵɵelementStart(46, \"mat-slide-toggle\", 15);\n        i0.ɵɵtext(47, \"Yes \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"hr\", 13);\n        i0.ɵɵelementStart(49, \"div\", 5)(50, \"div\", 6)(51, \"label\", 7);\n        i0.ɵɵtext(52, \" Files Section \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 16);\n        i0.ɵɵtext(54, \" Add Files \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(55, \"hr\", 13)(56, \"br\");\n        i0.ɵɵelementStart(57, \"button\", 17);\n        i0.ɵɵtext(58, \" update Task \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(57);\n        i0.ɵɵproperty(\"disabled\", ctx.disableButton);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatSlider, i5.MatSlideToggle],\n    styles: [\"\"]\n  });\n  return CardUpdateTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}