{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../tokenstorageservice/token-storage.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, tokenStorage, router) {\n      this.http = http;\n      this.tokenStorage = tokenStorage;\n      this.router = router;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      this.TOKEN_KEY = 'AuthToken';\n      this.roles = \"\";\n      this.loginUrl = 'http://localhost:8085/api/auth/signin';\n      this.currentUserSubject = new BehaviorSubject(sessionStorage.getItem(this.TOKEN_KEY));\n      this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    }\n\n    login(LoginInfo) {\n      return this.http.post(this.loginUrl, LoginInfo);\n      console.log(login).pipe(map(data => {\n        this.saveUserData(data);\n        return data;\n      }, error => {\n        console.log(error);\n      }));\n    }\n\n    saveUserData(data) {\n      this.tokenStorage.saveToken(data.accessToken);\n      this.tokenStorage.saveId(data.id);\n      this.tokenStorage.saveUsername(data.username);\n      this.tokenStorage.saveAuthorities(data.roles);\n    }\n\n    clear() {\n      localStorage.clear();\n    }\n\n    getToken() {\n      return localStorage.getItem('jwtToken');\n    }\n\n    getRoles() {\n      return this.tokenStorage.getAuthorities() + \"\";\n    }\n\n    isLoggedIn() {\n      return this.getRoles() && this.getToken();\n    }\n\n    logout() {\n      this.tokenStorage.saveToken(\"\");\n      this.tokenStorage.saveUsername(\"\");\n      this.tokenStorage.saveAuthorities(\"\");\n    }\n\n    getcurrentuser(id) {\n      return this.http.get('http://localhost:8085/user/getUserById/' + id);\n    }\n\n    updateuser(user, id) {\n      return this.http.post('http://localhost:8085/user/updateUser/' + id, user);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}